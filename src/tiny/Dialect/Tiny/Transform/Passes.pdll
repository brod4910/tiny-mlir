#include "mlir/IR/OpBase.td"

// ----------------------------------- 
// ----------------------------------- 
// ----------- CONSTRAINTS ----------- 
// ----------------------------------- 
// ----------------------------------- 

Constraint HasSameElementType(value1: Value, value2: Value) [{
    return mlir::success(value1.getType().cast<mlir::ShapedType>().getElementType() == 
                  value2.getType().cast<mlir::ShapedType>().getElementType());
}];

// ----------------------------------- 
// ----------------------------------- 
// ----------- PATTERNS -------------- 
// ----------------------------------- 
// ----------------------------------- 

Pattern EraseNoOpPattern with benefit(1) {
  let value: Value;

  let root = op<tiny.noop>(value);

  replace root with value;
} 

Pattern CastNoOpPattern {
    let value1: Value;
    let value2: Value;

    HasSameElementType(value1, value2);

    let root = op<tiny.cast>(value1, value2);

    replace root with op<tiny.noop>(value1);
}